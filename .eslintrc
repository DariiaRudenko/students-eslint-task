{
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "env": {
    "es6": true
  },
  "rules": {
    "brace-style": ["error", "1tbs"],
    "camelcase": "error",
    "comma-spacing": "error",
    "comma-style": ["error", {"exceptions": {
      "ArrayExpression": false,
      "ArrayPattern": false,
      "ArrowFunctionExpression": false,
      "CallExpression": false,
      "FunctionDeclaration": false,
      "FunctionExpression": false,
      "ImportDeclaration": false,
      "ObjectExpression": false,
      "ObjectPattern": false,
      "VariableDeclaration": false,
      "NewExpression": false
    }}],
    "computed-property-spacing": "error",
    "eol-last": "error",
    "func-names": "warn",
    "implicit-arrow-linebreak": "error",
    "indent": ["error", 4],
    "keyword-spacing": ["error", { "before": true, "after": true }],
    "max-len": ["error", 80, { "ignoreComments": true }, { "ignoreStrings": true }],
    "new-parens": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": "error",
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
    "no-new-object": "error",
    "no-restricted-syntax": ["error", "ForInStatement",  {"message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."}],
    "no-tabs": "error",
    "no-plusplus": "error",
    "no-spaced-func": "error",
    "no-underscore-dangle": "error",
    "nonblock-statement-body-position": ["error", "beside"],
    "padded-blocks":["error", "never"],
    "quotes": ["error", "prefer-single"],
    "semi": ["error", "always"],
    "semi-spacing": ["error", { "before": false, "after": true }],
    "no-extra-semi": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", {"anonymous": "always", "named": "never", "asyncArrow": "always"}],
    "space-in-parens": ["error", "never"],
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": ["error", "always"]
  }
}